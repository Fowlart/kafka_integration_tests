/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sephora.services.reservation.avro.audit;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ReservationAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5623937002831535491L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReservationAvro\",\"namespace\":\"com.sephora.services.reservation.avro.audit\",\"fields\":[{\"name\":\"channelId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tickets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TicketAvro\",\"fields\":[{\"name\":\"ticketId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ticketStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"client\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClientAvro\",\"fields\":[{\"name\":\"beautyInsiderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerProfileId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"timeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"serviceDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ServiceDetailsAvro\",\"fields\":[{\"name\":\"activityType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"storeBaId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isBaChosenByClient\",\"type\":\"boolean\",\"default\":false},{\"name\":\"activityId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"storeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"skuId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cancelChargeHours\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tipIncluded\",\"type\":\"boolean\",\"default\":false},{\"name\":\"tipAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderXrefId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"brandRequest\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BrandRequestAvro\",\"fields\":[{\"name\":\"brandId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestHeadCount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepFirstName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepLastName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepPhone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"bookingXrefId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bookingDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cancelDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"confirmationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bookingType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"noShowTimestamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"default\":[]},\"default\":[]},{\"name\":\"paymentDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationPaymentAvro\",\"fields\":[{\"name\":\"paymentMethodId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentMethod\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentReferenceNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentTransactionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentCaptureDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentAuthDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentAuthAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentCaptureAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"reservationPreferences\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReservationPreferenceAvro\",\"fields\":[{\"name\":\"reservationPrefId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationPrefName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationPrefValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationPrefType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"default\":[]},\"default\":[]},{\"name\":\"priceDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationPricingAvro\",\"fields\":[{\"name\":\"listPrice\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taxes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationPricingTaxesAvro\",\"fields\":[{\"name\":\"goodsAndServicesTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"harmonizedSalesTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"provincialSalesTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"totalTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"total\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"noShowCharge\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"currencyCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"scheduleSource\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"world\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ReservationAvro> ENCODER =
      new BinaryMessageEncoder<ReservationAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ReservationAvro> DECODER =
      new BinaryMessageDecoder<ReservationAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ReservationAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ReservationAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ReservationAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ReservationAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ReservationAvro from a ByteBuffer. */
  public static ReservationAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence channelId;
  @Deprecated public CharSequence reservationId;
  @Deprecated public java.util.List<TicketAvro> tickets;
  @Deprecated public ReservationPaymentAvro paymentDetails;
  @Deprecated public java.util.List<ReservationPreferenceAvro> reservationPreferences;
  @Deprecated public ReservationPricingAvro priceDetails;
  @Deprecated public CharSequence scheduleSource;
  @Deprecated public CharSequence world;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ReservationAvro() {}

  /**
   * All-args constructor.
   * @param channelId The new value for channelId
   * @param reservationId The new value for reservationId
   * @param tickets The new value for tickets
   * @param paymentDetails The new value for paymentDetails
   * @param reservationPreferences The new value for reservationPreferences
   * @param priceDetails The new value for priceDetails
   * @param scheduleSource The new value for scheduleSource
   * @param world The new value for world
   */
  public ReservationAvro(CharSequence channelId, CharSequence reservationId, java.util.List<TicketAvro> tickets, ReservationPaymentAvro paymentDetails, java.util.List<ReservationPreferenceAvro> reservationPreferences, ReservationPricingAvro priceDetails, CharSequence scheduleSource, CharSequence world) {
    this.channelId = channelId;
    this.reservationId = reservationId;
    this.tickets = tickets;
    this.paymentDetails = paymentDetails;
    this.reservationPreferences = reservationPreferences;
    this.priceDetails = priceDetails;
    this.scheduleSource = scheduleSource;
    this.world = world;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return channelId;
    case 1: return reservationId;
    case 2: return tickets;
    case 3: return paymentDetails;
    case 4: return reservationPreferences;
    case 5: return priceDetails;
    case 6: return scheduleSource;
    case 7: return world;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: channelId = (CharSequence)value$; break;
    case 1: reservationId = (CharSequence)value$; break;
    case 2: tickets = (java.util.List<TicketAvro>)value$; break;
    case 3: paymentDetails = (ReservationPaymentAvro)value$; break;
    case 4: reservationPreferences = (java.util.List<ReservationPreferenceAvro>)value$; break;
    case 5: priceDetails = (ReservationPricingAvro)value$; break;
    case 6: scheduleSource = (CharSequence)value$; break;
    case 7: world = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'channelId' field.
   * @return The value of the 'channelId' field.
   */
  public CharSequence getChannelId() {
    return channelId;
  }

  /**
   * Sets the value of the 'channelId' field.
   * @param value the value to set.
   */
  public void setChannelId(CharSequence value) {
    this.channelId = value;
  }

  /**
   * Gets the value of the 'reservationId' field.
   * @return The value of the 'reservationId' field.
   */
  public CharSequence getReservationId() {
    return reservationId;
  }

  /**
   * Sets the value of the 'reservationId' field.
   * @param value the value to set.
   */
  public void setReservationId(CharSequence value) {
    this.reservationId = value;
  }

  /**
   * Gets the value of the 'tickets' field.
   * @return The value of the 'tickets' field.
   */
  public java.util.List<TicketAvro> getTickets() {
    return tickets;
  }

  /**
   * Sets the value of the 'tickets' field.
   * @param value the value to set.
   */
  public void setTickets(java.util.List<TicketAvro> value) {
    this.tickets = value;
  }

  /**
   * Gets the value of the 'paymentDetails' field.
   * @return The value of the 'paymentDetails' field.
   */
  public ReservationPaymentAvro getPaymentDetails() {
    return paymentDetails;
  }

  /**
   * Sets the value of the 'paymentDetails' field.
   * @param value the value to set.
   */
  public void setPaymentDetails(ReservationPaymentAvro value) {
    this.paymentDetails = value;
  }

  /**
   * Gets the value of the 'reservationPreferences' field.
   * @return The value of the 'reservationPreferences' field.
   */
  public java.util.List<ReservationPreferenceAvro> getReservationPreferences() {
    return reservationPreferences;
  }

  /**
   * Sets the value of the 'reservationPreferences' field.
   * @param value the value to set.
   */
  public void setReservationPreferences(java.util.List<ReservationPreferenceAvro> value) {
    this.reservationPreferences = value;
  }

  /**
   * Gets the value of the 'priceDetails' field.
   * @return The value of the 'priceDetails' field.
   */
  public ReservationPricingAvro getPriceDetails() {
    return priceDetails;
  }

  /**
   * Sets the value of the 'priceDetails' field.
   * @param value the value to set.
   */
  public void setPriceDetails(ReservationPricingAvro value) {
    this.priceDetails = value;
  }

  /**
   * Gets the value of the 'scheduleSource' field.
   * @return The value of the 'scheduleSource' field.
   */
  public CharSequence getScheduleSource() {
    return scheduleSource;
  }

  /**
   * Sets the value of the 'scheduleSource' field.
   * @param value the value to set.
   */
  public void setScheduleSource(CharSequence value) {
    this.scheduleSource = value;
  }

  /**
   * Gets the value of the 'world' field.
   * @return The value of the 'world' field.
   */
  public CharSequence getWorld() {
    return world;
  }

  /**
   * Sets the value of the 'world' field.
   * @param value the value to set.
   */
  public void setWorld(CharSequence value) {
    this.world = value;
  }

  /**
   * Creates a new ReservationAvro RecordBuilder.
   * @return A new ReservationAvro RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new ReservationAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ReservationAvro RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new ReservationAvro RecordBuilder by copying an existing ReservationAvro instance.
   * @param other The existing instance to copy.
   * @return A new ReservationAvro RecordBuilder
   */
  public static Builder newBuilder(ReservationAvro other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for ReservationAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReservationAvro>
    implements org.apache.avro.data.RecordBuilder<ReservationAvro> {

    private CharSequence channelId;
    private CharSequence reservationId;
    private java.util.List<TicketAvro> tickets;
    private ReservationPaymentAvro paymentDetails;
    private ReservationPaymentAvro.Builder paymentDetailsBuilder;
    private java.util.List<ReservationPreferenceAvro> reservationPreferences;
    private ReservationPricingAvro priceDetails;
    private ReservationPricingAvro.Builder priceDetailsBuilder;
    private CharSequence scheduleSource;
    private CharSequence world;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.reservationId)) {
        this.reservationId = data().deepCopy(fields()[1].schema(), other.reservationId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tickets)) {
        this.tickets = data().deepCopy(fields()[2].schema(), other.tickets);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.paymentDetails)) {
        this.paymentDetails = data().deepCopy(fields()[3].schema(), other.paymentDetails);
        fieldSetFlags()[3] = true;
      }
      if (other.hasPaymentDetailsBuilder()) {
        this.paymentDetailsBuilder = ReservationPaymentAvro.newBuilder(other.getPaymentDetailsBuilder());
      }
      if (isValidValue(fields()[4], other.reservationPreferences)) {
        this.reservationPreferences = data().deepCopy(fields()[4].schema(), other.reservationPreferences);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.priceDetails)) {
        this.priceDetails = data().deepCopy(fields()[5].schema(), other.priceDetails);
        fieldSetFlags()[5] = true;
      }
      if (other.hasPriceDetailsBuilder()) {
        this.priceDetailsBuilder = ReservationPricingAvro.newBuilder(other.getPriceDetailsBuilder());
      }
      if (isValidValue(fields()[6], other.scheduleSource)) {
        this.scheduleSource = data().deepCopy(fields()[6].schema(), other.scheduleSource);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.world)) {
        this.world = data().deepCopy(fields()[7].schema(), other.world);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ReservationAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(ReservationAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.reservationId)) {
        this.reservationId = data().deepCopy(fields()[1].schema(), other.reservationId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tickets)) {
        this.tickets = data().deepCopy(fields()[2].schema(), other.tickets);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.paymentDetails)) {
        this.paymentDetails = data().deepCopy(fields()[3].schema(), other.paymentDetails);
        fieldSetFlags()[3] = true;
      }
      this.paymentDetailsBuilder = null;
      if (isValidValue(fields()[4], other.reservationPreferences)) {
        this.reservationPreferences = data().deepCopy(fields()[4].schema(), other.reservationPreferences);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.priceDetails)) {
        this.priceDetails = data().deepCopy(fields()[5].schema(), other.priceDetails);
        fieldSetFlags()[5] = true;
      }
      this.priceDetailsBuilder = null;
      if (isValidValue(fields()[6], other.scheduleSource)) {
        this.scheduleSource = data().deepCopy(fields()[6].schema(), other.scheduleSource);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.world)) {
        this.world = data().deepCopy(fields()[7].schema(), other.world);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'channelId' field.
      * @return The value.
      */
    public CharSequence getChannelId() {
      return channelId;
    }

    /**
      * Sets the value of the 'channelId' field.
      * @param value The value of 'channelId'.
      * @return This builder.
      */
    public Builder setChannelId(CharSequence value) {
      validate(fields()[0], value);
      this.channelId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'channelId' field has been set.
      * @return True if the 'channelId' field has been set, false otherwise.
      */
    public boolean hasChannelId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'channelId' field.
      * @return This builder.
      */
    public Builder clearChannelId() {
      channelId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'reservationId' field.
      * @return The value.
      */
    public CharSequence getReservationId() {
      return reservationId;
    }

    /**
      * Sets the value of the 'reservationId' field.
      * @param value The value of 'reservationId'.
      * @return This builder.
      */
    public Builder setReservationId(CharSequence value) {
      validate(fields()[1], value);
      this.reservationId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'reservationId' field has been set.
      * @return True if the 'reservationId' field has been set, false otherwise.
      */
    public boolean hasReservationId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'reservationId' field.
      * @return This builder.
      */
    public Builder clearReservationId() {
      reservationId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tickets' field.
      * @return The value.
      */
    public java.util.List<TicketAvro> getTickets() {
      return tickets;
    }

    /**
      * Sets the value of the 'tickets' field.
      * @param value The value of 'tickets'.
      * @return This builder.
      */
    public Builder setTickets(java.util.List<TicketAvro> value) {
      validate(fields()[2], value);
      this.tickets = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tickets' field has been set.
      * @return True if the 'tickets' field has been set, false otherwise.
      */
    public boolean hasTickets() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tickets' field.
      * @return This builder.
      */
    public Builder clearTickets() {
      tickets = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentDetails' field.
      * @return The value.
      */
    public ReservationPaymentAvro getPaymentDetails() {
      return paymentDetails;
    }

    /**
      * Sets the value of the 'paymentDetails' field.
      * @param value The value of 'paymentDetails'.
      * @return This builder.
      */
    public Builder setPaymentDetails(ReservationPaymentAvro value) {
      validate(fields()[3], value);
      this.paymentDetailsBuilder = null;
      this.paymentDetails = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentDetails' field has been set.
      * @return True if the 'paymentDetails' field has been set, false otherwise.
      */
    public boolean hasPaymentDetails() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'paymentDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ReservationPaymentAvro.Builder getPaymentDetailsBuilder() {
      if (paymentDetailsBuilder == null) {
        if (hasPaymentDetails()) {
          setPaymentDetailsBuilder(ReservationPaymentAvro.newBuilder(paymentDetails));
        } else {
          setPaymentDetailsBuilder(ReservationPaymentAvro.newBuilder());
        }
      }
      return paymentDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'paymentDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setPaymentDetailsBuilder(ReservationPaymentAvro.Builder value) {
      clearPaymentDetails();
      paymentDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paymentDetails' field has an active Builder instance
     * @return True if the 'paymentDetails' field has an active Builder instance
     */
    public boolean hasPaymentDetailsBuilder() {
      return paymentDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'paymentDetails' field.
      * @return This builder.
      */
    public Builder clearPaymentDetails() {
      paymentDetails = null;
      paymentDetailsBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'reservationPreferences' field.
      * @return The value.
      */
    public java.util.List<ReservationPreferenceAvro> getReservationPreferences() {
      return reservationPreferences;
    }

    /**
      * Sets the value of the 'reservationPreferences' field.
      * @param value The value of 'reservationPreferences'.
      * @return This builder.
      */
    public Builder setReservationPreferences(java.util.List<ReservationPreferenceAvro> value) {
      validate(fields()[4], value);
      this.reservationPreferences = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'reservationPreferences' field has been set.
      * @return True if the 'reservationPreferences' field has been set, false otherwise.
      */
    public boolean hasReservationPreferences() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'reservationPreferences' field.
      * @return This builder.
      */
    public Builder clearReservationPreferences() {
      reservationPreferences = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'priceDetails' field.
      * @return The value.
      */
    public ReservationPricingAvro getPriceDetails() {
      return priceDetails;
    }

    /**
      * Sets the value of the 'priceDetails' field.
      * @param value The value of 'priceDetails'.
      * @return This builder.
      */
    public Builder setPriceDetails(ReservationPricingAvro value) {
      validate(fields()[5], value);
      this.priceDetailsBuilder = null;
      this.priceDetails = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'priceDetails' field has been set.
      * @return True if the 'priceDetails' field has been set, false otherwise.
      */
    public boolean hasPriceDetails() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'priceDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ReservationPricingAvro.Builder getPriceDetailsBuilder() {
      if (priceDetailsBuilder == null) {
        if (hasPriceDetails()) {
          setPriceDetailsBuilder(ReservationPricingAvro.newBuilder(priceDetails));
        } else {
          setPriceDetailsBuilder(ReservationPricingAvro.newBuilder());
        }
      }
      return priceDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'priceDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setPriceDetailsBuilder(ReservationPricingAvro.Builder value) {
      clearPriceDetails();
      priceDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'priceDetails' field has an active Builder instance
     * @return True if the 'priceDetails' field has an active Builder instance
     */
    public boolean hasPriceDetailsBuilder() {
      return priceDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'priceDetails' field.
      * @return This builder.
      */
    public Builder clearPriceDetails() {
      priceDetails = null;
      priceDetailsBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'scheduleSource' field.
      * @return The value.
      */
    public CharSequence getScheduleSource() {
      return scheduleSource;
    }

    /**
      * Sets the value of the 'scheduleSource' field.
      * @param value The value of 'scheduleSource'.
      * @return This builder.
      */
    public Builder setScheduleSource(CharSequence value) {
      validate(fields()[6], value);
      this.scheduleSource = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'scheduleSource' field has been set.
      * @return True if the 'scheduleSource' field has been set, false otherwise.
      */
    public boolean hasScheduleSource() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'scheduleSource' field.
      * @return This builder.
      */
    public Builder clearScheduleSource() {
      scheduleSource = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'world' field.
      * @return The value.
      */
    public CharSequence getWorld() {
      return world;
    }

    /**
      * Sets the value of the 'world' field.
      * @param value The value of 'world'.
      * @return This builder.
      */
    public Builder setWorld(CharSequence value) {
      validate(fields()[7], value);
      this.world = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'world' field has been set.
      * @return True if the 'world' field has been set, false otherwise.
      */
    public boolean hasWorld() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'world' field.
      * @return This builder.
      */
    public Builder clearWorld() {
      world = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ReservationAvro build() {
      try {
        ReservationAvro record = new ReservationAvro();
        record.channelId = fieldSetFlags()[0] ? this.channelId : (CharSequence) defaultValue(fields()[0]);
        record.reservationId = fieldSetFlags()[1] ? this.reservationId : (CharSequence) defaultValue(fields()[1]);
        record.tickets = fieldSetFlags()[2] ? this.tickets : (java.util.List<TicketAvro>) defaultValue(fields()[2]);
        if (paymentDetailsBuilder != null) {
          record.paymentDetails = this.paymentDetailsBuilder.build();
        } else {
          record.paymentDetails = fieldSetFlags()[3] ? this.paymentDetails : (ReservationPaymentAvro) defaultValue(fields()[3]);
        }
        record.reservationPreferences = fieldSetFlags()[4] ? this.reservationPreferences : (java.util.List<ReservationPreferenceAvro>) defaultValue(fields()[4]);
        if (priceDetailsBuilder != null) {
          record.priceDetails = this.priceDetailsBuilder.build();
        } else {
          record.priceDetails = fieldSetFlags()[5] ? this.priceDetails : (ReservationPricingAvro) defaultValue(fields()[5]);
        }
        record.scheduleSource = fieldSetFlags()[6] ? this.scheduleSource : (CharSequence) defaultValue(fields()[6]);
        record.world = fieldSetFlags()[7] ? this.world : (CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ReservationAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ReservationAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ReservationAvro>
    READER$ = (org.apache.avro.io.DatumReader<ReservationAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
