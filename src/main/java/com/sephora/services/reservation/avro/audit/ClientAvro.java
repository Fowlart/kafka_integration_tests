/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sephora.services.reservation.avro.audit;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ClientAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -63697334180541998L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClientAvro\",\"namespace\":\"com.sephora.services.reservation.avro.audit\",\"fields\":[{\"name\":\"beautyInsiderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerProfileId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"timeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ClientAvro> ENCODER =
      new BinaryMessageEncoder<ClientAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ClientAvro> DECODER =
      new BinaryMessageDecoder<ClientAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ClientAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ClientAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ClientAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ClientAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ClientAvro from a ByteBuffer. */
  public static ClientAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence beautyInsiderId;
  @Deprecated public CharSequence customerProfileId;
  @Deprecated public CharSequence firstName;
  @Deprecated public CharSequence lastName;
  @Deprecated public CharSequence email;
  @Deprecated public CharSequence phone;
  @Deprecated public CharSequence timeZone;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ClientAvro() {}

  /**
   * All-args constructor.
   * @param beautyInsiderId The new value for beautyInsiderId
   * @param customerProfileId The new value for customerProfileId
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param email The new value for email
   * @param phone The new value for phone
   * @param timeZone The new value for timeZone
   */
  public ClientAvro(CharSequence beautyInsiderId, CharSequence customerProfileId, CharSequence firstName, CharSequence lastName, CharSequence email, CharSequence phone, CharSequence timeZone) {
    this.beautyInsiderId = beautyInsiderId;
    this.customerProfileId = customerProfileId;
    this.firstName = firstName;
    this.lastName = lastName;
    this.email = email;
    this.phone = phone;
    this.timeZone = timeZone;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return beautyInsiderId;
    case 1: return customerProfileId;
    case 2: return firstName;
    case 3: return lastName;
    case 4: return email;
    case 5: return phone;
    case 6: return timeZone;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: beautyInsiderId = (CharSequence)value$; break;
    case 1: customerProfileId = (CharSequence)value$; break;
    case 2: firstName = (CharSequence)value$; break;
    case 3: lastName = (CharSequence)value$; break;
    case 4: email = (CharSequence)value$; break;
    case 5: phone = (CharSequence)value$; break;
    case 6: timeZone = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'beautyInsiderId' field.
   * @return The value of the 'beautyInsiderId' field.
   */
  public CharSequence getBeautyInsiderId() {
    return beautyInsiderId;
  }

  /**
   * Sets the value of the 'beautyInsiderId' field.
   * @param value the value to set.
   */
  public void setBeautyInsiderId(CharSequence value) {
    this.beautyInsiderId = value;
  }

  /**
   * Gets the value of the 'customerProfileId' field.
   * @return The value of the 'customerProfileId' field.
   */
  public CharSequence getCustomerProfileId() {
    return customerProfileId;
  }

  /**
   * Sets the value of the 'customerProfileId' field.
   * @param value the value to set.
   */
  public void setCustomerProfileId(CharSequence value) {
    this.customerProfileId = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public CharSequence getPhone() {
    return phone;
  }

  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(CharSequence value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'timeZone' field.
   * @return The value of the 'timeZone' field.
   */
  public CharSequence getTimeZone() {
    return timeZone;
  }

  /**
   * Sets the value of the 'timeZone' field.
   * @param value the value to set.
   */
  public void setTimeZone(CharSequence value) {
    this.timeZone = value;
  }

  /**
   * Creates a new ClientAvro RecordBuilder.
   * @return A new ClientAvro RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new ClientAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ClientAvro RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new ClientAvro RecordBuilder by copying an existing ClientAvro instance.
   * @param other The existing instance to copy.
   * @return A new ClientAvro RecordBuilder
   */
  public static Builder newBuilder(ClientAvro other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for ClientAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClientAvro>
    implements org.apache.avro.data.RecordBuilder<ClientAvro> {

    private CharSequence beautyInsiderId;
    private CharSequence customerProfileId;
    private CharSequence firstName;
    private CharSequence lastName;
    private CharSequence email;
    private CharSequence phone;
    private CharSequence timeZone;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.beautyInsiderId)) {
        this.beautyInsiderId = data().deepCopy(fields()[0].schema(), other.beautyInsiderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerProfileId)) {
        this.customerProfileId = data().deepCopy(fields()[1].schema(), other.customerProfileId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstName)) {
        this.firstName = data().deepCopy(fields()[2].schema(), other.firstName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastName)) {
        this.lastName = data().deepCopy(fields()[3].schema(), other.lastName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phone)) {
        this.phone = data().deepCopy(fields()[5].schema(), other.phone);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timeZone)) {
        this.timeZone = data().deepCopy(fields()[6].schema(), other.timeZone);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ClientAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(ClientAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.beautyInsiderId)) {
        this.beautyInsiderId = data().deepCopy(fields()[0].schema(), other.beautyInsiderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerProfileId)) {
        this.customerProfileId = data().deepCopy(fields()[1].schema(), other.customerProfileId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstName)) {
        this.firstName = data().deepCopy(fields()[2].schema(), other.firstName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastName)) {
        this.lastName = data().deepCopy(fields()[3].schema(), other.lastName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phone)) {
        this.phone = data().deepCopy(fields()[5].schema(), other.phone);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timeZone)) {
        this.timeZone = data().deepCopy(fields()[6].schema(), other.timeZone);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'beautyInsiderId' field.
      * @return The value.
      */
    public CharSequence getBeautyInsiderId() {
      return beautyInsiderId;
    }

    /**
      * Sets the value of the 'beautyInsiderId' field.
      * @param value The value of 'beautyInsiderId'.
      * @return This builder.
      */
    public Builder setBeautyInsiderId(CharSequence value) {
      validate(fields()[0], value);
      this.beautyInsiderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'beautyInsiderId' field has been set.
      * @return True if the 'beautyInsiderId' field has been set, false otherwise.
      */
    public boolean hasBeautyInsiderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'beautyInsiderId' field.
      * @return This builder.
      */
    public Builder clearBeautyInsiderId() {
      beautyInsiderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerProfileId' field.
      * @return The value.
      */
    public CharSequence getCustomerProfileId() {
      return customerProfileId;
    }

    /**
      * Sets the value of the 'customerProfileId' field.
      * @param value The value of 'customerProfileId'.
      * @return This builder.
      */
    public Builder setCustomerProfileId(CharSequence value) {
      validate(fields()[1], value);
      this.customerProfileId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customerProfileId' field has been set.
      * @return True if the 'customerProfileId' field has been set, false otherwise.
      */
    public boolean hasCustomerProfileId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customerProfileId' field.
      * @return This builder.
      */
    public Builder clearCustomerProfileId() {
      customerProfileId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public CharSequence getFirstName() {
      return firstName;
    }

    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public Builder setFirstName(CharSequence value) {
      validate(fields()[2], value);
      this.firstName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public CharSequence getLastName() {
      return lastName;
    }

    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public Builder setLastName(CharSequence value) {
      validate(fields()[3], value);
      this.lastName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public CharSequence getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public Builder setEmail(CharSequence value) {
      validate(fields()[4], value);
      this.email = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public Builder clearEmail() {
      email = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public CharSequence getPhone() {
      return phone;
    }

    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public Builder setPhone(CharSequence value) {
      validate(fields()[5], value);
      this.phone = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public Builder clearPhone() {
      phone = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeZone' field.
      * @return The value.
      */
    public CharSequence getTimeZone() {
      return timeZone;
    }

    /**
      * Sets the value of the 'timeZone' field.
      * @param value The value of 'timeZone'.
      * @return This builder.
      */
    public Builder setTimeZone(CharSequence value) {
      validate(fields()[6], value);
      this.timeZone = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'timeZone' field has been set.
      * @return True if the 'timeZone' field has been set, false otherwise.
      */
    public boolean hasTimeZone() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'timeZone' field.
      * @return This builder.
      */
    public Builder clearTimeZone() {
      timeZone = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ClientAvro build() {
      try {
        ClientAvro record = new ClientAvro();
        record.beautyInsiderId = fieldSetFlags()[0] ? this.beautyInsiderId : (CharSequence) defaultValue(fields()[0]);
        record.customerProfileId = fieldSetFlags()[1] ? this.customerProfileId : (CharSequence) defaultValue(fields()[1]);
        record.firstName = fieldSetFlags()[2] ? this.firstName : (CharSequence) defaultValue(fields()[2]);
        record.lastName = fieldSetFlags()[3] ? this.lastName : (CharSequence) defaultValue(fields()[3]);
        record.email = fieldSetFlags()[4] ? this.email : (CharSequence) defaultValue(fields()[4]);
        record.phone = fieldSetFlags()[5] ? this.phone : (CharSequence) defaultValue(fields()[5]);
        record.timeZone = fieldSetFlags()[6] ? this.timeZone : (CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ClientAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ClientAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ClientAvro>
    READER$ = (org.apache.avro.io.DatumReader<ClientAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
