/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sephora.services.reservation.avro.audit;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ReservationAuditAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2676529481945690610L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReservationAuditAvro\",\"namespace\":\"com.sephora.services.reservation.avro.audit\",\"fields\":[{\"name\":\"reservation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationAvro\",\"fields\":[{\"name\":\"channelId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tickets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TicketAvro\",\"fields\":[{\"name\":\"ticketId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ticketStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"client\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClientAvro\",\"fields\":[{\"name\":\"beautyInsiderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerProfileId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"timeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"serviceDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ServiceDetailsAvro\",\"fields\":[{\"name\":\"activityType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"storeBaId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isBaChosenByClient\",\"type\":\"boolean\",\"default\":false},{\"name\":\"activityId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"storeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"skuId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cancelChargeHours\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tipIncluded\",\"type\":\"boolean\",\"default\":false},{\"name\":\"tipAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderXrefId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"brandRequest\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BrandRequestAvro\",\"fields\":[{\"name\":\"brandId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestHeadCount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepFirstName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepLastName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"brandRepPhone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"bookingXrefId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bookingDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cancelDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"confirmationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bookingType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"noShowTimestamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"default\":[]},\"default\":[]},{\"name\":\"paymentDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationPaymentAvro\",\"fields\":[{\"name\":\"paymentMethodId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentMethod\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentReferenceNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentTransactionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentCaptureDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentAuthDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentAuthAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentCaptureAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"reservationPreferences\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReservationPreferenceAvro\",\"fields\":[{\"name\":\"reservationPrefId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationPrefName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationPrefValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reservationPrefType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"default\":[]},\"default\":[]},{\"name\":\"priceDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationPricingAvro\",\"fields\":[{\"name\":\"listPrice\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taxes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReservationPricingTaxesAvro\",\"fields\":[{\"name\":\"goodsAndServicesTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"harmonizedSalesTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"provincialSalesTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"totalTax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"total\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"noShowCharge\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"currencyCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"scheduleSource\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"world\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"createdTimeStamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateTimestamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateChannel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"noShowTimestamp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ReservationAuditAvro> ENCODER =
      new BinaryMessageEncoder<ReservationAuditAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ReservationAuditAvro> DECODER =
      new BinaryMessageDecoder<ReservationAuditAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ReservationAuditAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ReservationAuditAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ReservationAuditAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ReservationAuditAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ReservationAuditAvro from a ByteBuffer. */
  public static ReservationAuditAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public ReservationAvro reservation;
  @Deprecated public CharSequence createdTimeStamp;
  @Deprecated public CharSequence updateTimestamp;
  @Deprecated public CharSequence updateChannel;
  @Deprecated public CharSequence status;
  @Deprecated public CharSequence noShowTimestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ReservationAuditAvro() {}

  /**
   * All-args constructor.
   * @param reservation The new value for reservation
   * @param createdTimeStamp The new value for createdTimeStamp
   * @param updateTimestamp The new value for updateTimestamp
   * @param updateChannel The new value for updateChannel
   * @param status The new value for status
   * @param noShowTimestamp The new value for noShowTimestamp
   */
  public ReservationAuditAvro(ReservationAvro reservation, CharSequence createdTimeStamp, CharSequence updateTimestamp, CharSequence updateChannel, CharSequence status, CharSequence noShowTimestamp) {
    this.reservation = reservation;
    this.createdTimeStamp = createdTimeStamp;
    this.updateTimestamp = updateTimestamp;
    this.updateChannel = updateChannel;
    this.status = status;
    this.noShowTimestamp = noShowTimestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return reservation;
    case 1: return createdTimeStamp;
    case 2: return updateTimestamp;
    case 3: return updateChannel;
    case 4: return status;
    case 5: return noShowTimestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: reservation = (ReservationAvro)value$; break;
    case 1: createdTimeStamp = (CharSequence)value$; break;
    case 2: updateTimestamp = (CharSequence)value$; break;
    case 3: updateChannel = (CharSequence)value$; break;
    case 4: status = (CharSequence)value$; break;
    case 5: noShowTimestamp = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reservation' field.
   * @return The value of the 'reservation' field.
   */
  public ReservationAvro getReservation() {
    return reservation;
  }

  /**
   * Sets the value of the 'reservation' field.
   * @param value the value to set.
   */
  public void setReservation(ReservationAvro value) {
    this.reservation = value;
  }

  /**
   * Gets the value of the 'createdTimeStamp' field.
   * @return The value of the 'createdTimeStamp' field.
   */
  public CharSequence getCreatedTimeStamp() {
    return createdTimeStamp;
  }

  /**
   * Sets the value of the 'createdTimeStamp' field.
   * @param value the value to set.
   */
  public void setCreatedTimeStamp(CharSequence value) {
    this.createdTimeStamp = value;
  }

  /**
   * Gets the value of the 'updateTimestamp' field.
   * @return The value of the 'updateTimestamp' field.
   */
  public CharSequence getUpdateTimestamp() {
    return updateTimestamp;
  }

  /**
   * Sets the value of the 'updateTimestamp' field.
   * @param value the value to set.
   */
  public void setUpdateTimestamp(CharSequence value) {
    this.updateTimestamp = value;
  }

  /**
   * Gets the value of the 'updateChannel' field.
   * @return The value of the 'updateChannel' field.
   */
  public CharSequence getUpdateChannel() {
    return updateChannel;
  }

  /**
   * Sets the value of the 'updateChannel' field.
   * @param value the value to set.
   */
  public void setUpdateChannel(CharSequence value) {
    this.updateChannel = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public CharSequence getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'noShowTimestamp' field.
   * @return The value of the 'noShowTimestamp' field.
   */
  public CharSequence getNoShowTimestamp() {
    return noShowTimestamp;
  }

  /**
   * Sets the value of the 'noShowTimestamp' field.
   * @param value the value to set.
   */
  public void setNoShowTimestamp(CharSequence value) {
    this.noShowTimestamp = value;
  }

  /**
   * Creates a new ReservationAuditAvro RecordBuilder.
   * @return A new ReservationAuditAvro RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new ReservationAuditAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ReservationAuditAvro RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new ReservationAuditAvro RecordBuilder by copying an existing ReservationAuditAvro instance.
   * @param other The existing instance to copy.
   * @return A new ReservationAuditAvro RecordBuilder
   */
  public static Builder newBuilder(ReservationAuditAvro other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for ReservationAuditAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReservationAuditAvro>
    implements org.apache.avro.data.RecordBuilder<ReservationAuditAvro> {

    private ReservationAvro reservation;
    private ReservationAvro.Builder reservationBuilder;
    private CharSequence createdTimeStamp;
    private CharSequence updateTimestamp;
    private CharSequence updateChannel;
    private CharSequence status;
    private CharSequence noShowTimestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reservation)) {
        this.reservation = data().deepCopy(fields()[0].schema(), other.reservation);
        fieldSetFlags()[0] = true;
      }
      if (other.hasReservationBuilder()) {
        this.reservationBuilder = ReservationAvro.newBuilder(other.getReservationBuilder());
      }
      if (isValidValue(fields()[1], other.createdTimeStamp)) {
        this.createdTimeStamp = data().deepCopy(fields()[1].schema(), other.createdTimeStamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.updateTimestamp)) {
        this.updateTimestamp = data().deepCopy(fields()[2].schema(), other.updateTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.updateChannel)) {
        this.updateChannel = data().deepCopy(fields()[3].schema(), other.updateChannel);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.noShowTimestamp)) {
        this.noShowTimestamp = data().deepCopy(fields()[5].schema(), other.noShowTimestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ReservationAuditAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(ReservationAuditAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.reservation)) {
        this.reservation = data().deepCopy(fields()[0].schema(), other.reservation);
        fieldSetFlags()[0] = true;
      }
      this.reservationBuilder = null;
      if (isValidValue(fields()[1], other.createdTimeStamp)) {
        this.createdTimeStamp = data().deepCopy(fields()[1].schema(), other.createdTimeStamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.updateTimestamp)) {
        this.updateTimestamp = data().deepCopy(fields()[2].schema(), other.updateTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.updateChannel)) {
        this.updateChannel = data().deepCopy(fields()[3].schema(), other.updateChannel);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.noShowTimestamp)) {
        this.noShowTimestamp = data().deepCopy(fields()[5].schema(), other.noShowTimestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'reservation' field.
      * @return The value.
      */
    public ReservationAvro getReservation() {
      return reservation;
    }

    /**
      * Sets the value of the 'reservation' field.
      * @param value The value of 'reservation'.
      * @return This builder.
      */
    public Builder setReservation(ReservationAvro value) {
      validate(fields()[0], value);
      this.reservationBuilder = null;
      this.reservation = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'reservation' field has been set.
      * @return True if the 'reservation' field has been set, false otherwise.
      */
    public boolean hasReservation() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'reservation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ReservationAvro.Builder getReservationBuilder() {
      if (reservationBuilder == null) {
        if (hasReservation()) {
          setReservationBuilder(ReservationAvro.newBuilder(reservation));
        } else {
          setReservationBuilder(ReservationAvro.newBuilder());
        }
      }
      return reservationBuilder;
    }

    /**
     * Sets the Builder instance for the 'reservation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setReservationBuilder(ReservationAvro.Builder value) {
      clearReservation();
      reservationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'reservation' field has an active Builder instance
     * @return True if the 'reservation' field has an active Builder instance
     */
    public boolean hasReservationBuilder() {
      return reservationBuilder != null;
    }

    /**
      * Clears the value of the 'reservation' field.
      * @return This builder.
      */
    public Builder clearReservation() {
      reservation = null;
      reservationBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdTimeStamp' field.
      * @return The value.
      */
    public CharSequence getCreatedTimeStamp() {
      return createdTimeStamp;
    }

    /**
      * Sets the value of the 'createdTimeStamp' field.
      * @param value The value of 'createdTimeStamp'.
      * @return This builder.
      */
    public Builder setCreatedTimeStamp(CharSequence value) {
      validate(fields()[1], value);
      this.createdTimeStamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'createdTimeStamp' field has been set.
      * @return True if the 'createdTimeStamp' field has been set, false otherwise.
      */
    public boolean hasCreatedTimeStamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'createdTimeStamp' field.
      * @return This builder.
      */
    public Builder clearCreatedTimeStamp() {
      createdTimeStamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateTimestamp' field.
      * @return The value.
      */
    public CharSequence getUpdateTimestamp() {
      return updateTimestamp;
    }

    /**
      * Sets the value of the 'updateTimestamp' field.
      * @param value The value of 'updateTimestamp'.
      * @return This builder.
      */
    public Builder setUpdateTimestamp(CharSequence value) {
      validate(fields()[2], value);
      this.updateTimestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'updateTimestamp' field has been set.
      * @return True if the 'updateTimestamp' field has been set, false otherwise.
      */
    public boolean hasUpdateTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'updateTimestamp' field.
      * @return This builder.
      */
    public Builder clearUpdateTimestamp() {
      updateTimestamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateChannel' field.
      * @return The value.
      */
    public CharSequence getUpdateChannel() {
      return updateChannel;
    }

    /**
      * Sets the value of the 'updateChannel' field.
      * @param value The value of 'updateChannel'.
      * @return This builder.
      */
    public Builder setUpdateChannel(CharSequence value) {
      validate(fields()[3], value);
      this.updateChannel = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'updateChannel' field has been set.
      * @return True if the 'updateChannel' field has been set, false otherwise.
      */
    public boolean hasUpdateChannel() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'updateChannel' field.
      * @return This builder.
      */
    public Builder clearUpdateChannel() {
      updateChannel = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public CharSequence getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public Builder setStatus(CharSequence value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'noShowTimestamp' field.
      * @return The value.
      */
    public CharSequence getNoShowTimestamp() {
      return noShowTimestamp;
    }

    /**
      * Sets the value of the 'noShowTimestamp' field.
      * @param value The value of 'noShowTimestamp'.
      * @return This builder.
      */
    public Builder setNoShowTimestamp(CharSequence value) {
      validate(fields()[5], value);
      this.noShowTimestamp = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'noShowTimestamp' field has been set.
      * @return True if the 'noShowTimestamp' field has been set, false otherwise.
      */
    public boolean hasNoShowTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'noShowTimestamp' field.
      * @return This builder.
      */
    public Builder clearNoShowTimestamp() {
      noShowTimestamp = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ReservationAuditAvro build() {
      try {
        ReservationAuditAvro record = new ReservationAuditAvro();
        if (reservationBuilder != null) {
          record.reservation = this.reservationBuilder.build();
        } else {
          record.reservation = fieldSetFlags()[0] ? this.reservation : (ReservationAvro) defaultValue(fields()[0]);
        }
        record.createdTimeStamp = fieldSetFlags()[1] ? this.createdTimeStamp : (CharSequence) defaultValue(fields()[1]);
        record.updateTimestamp = fieldSetFlags()[2] ? this.updateTimestamp : (CharSequence) defaultValue(fields()[2]);
        record.updateChannel = fieldSetFlags()[3] ? this.updateChannel : (CharSequence) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (CharSequence) defaultValue(fields()[4]);
        record.noShowTimestamp = fieldSetFlags()[5] ? this.noShowTimestamp : (CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ReservationAuditAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ReservationAuditAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ReservationAuditAvro>
    READER$ = (org.apache.avro.io.DatumReader<ReservationAuditAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
