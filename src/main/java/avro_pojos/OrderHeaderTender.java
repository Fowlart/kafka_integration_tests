/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro_pojos;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class OrderHeaderTender extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4378562460551021121L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderHeaderTender\",\"namespace\":\"com.sephora.dataplatform.avro\",\"fields\":[{\"name\":\"order_header\",\"type\":[{\"type\":\"record\",\"name\":\"OrderHeaderConsolidated\",\"fields\":[{\"name\":\"org_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"atg_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"usa_id\",\"type\":[\"null\",\"long\"]},{\"name\":\"sephora_id\",\"type\":[\"null\",\"long\"]},{\"name\":\"order_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"original_order_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"channel_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transaction_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"store_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cancel_flag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order_cancel_flag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order_cancel_datetime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order_submit_datetime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order_submit_datetime_local\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order_submit_date\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"is_declined\",\"type\":\"boolean\",\"default\":false},{\"name\":\"return_auth_flag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"return_reason_text\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"return_reference_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"return_group_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"return_sale_counter\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"return_return_counter\",\"type\":[\"null\",\"int\"],\"default\":null}]},\"null\"]},{\"name\":\"order_tender\",\"type\":[{\"type\":\"record\",\"name\":\"OrderTenderDetailsEvents\",\"fields\":[{\"name\":\"order_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"card_number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"channel_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transaction_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order_submit_date\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"null\"]},{\"name\":\"batch_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"group_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"number_of_accounts\",\"type\":\"int\",\"default\":1},{\"name\":\"is_primary\",\"type\":\"boolean\",\"doc\":\"means that transaction is directly related to the aggregation key\",\"default\":false},{\"name\":\"is_merge\",\"type\":\"boolean\",\"doc\":\"means that need to change key to usa_id from order_header (only if is_primary = true)\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderHeaderTender> ENCODER =
      new BinaryMessageEncoder<OrderHeaderTender>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderHeaderTender> DECODER =
      new BinaryMessageDecoder<OrderHeaderTender>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderHeaderTender> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderHeaderTender> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderHeaderTender> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderHeaderTender>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderHeaderTender to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderHeaderTender from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderHeaderTender instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderHeaderTender fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public OrderHeaderConsolidated order_header;
  @Deprecated public OrderTenderDetailsEvents order_tender;
  @Deprecated public String batch_id;
  @Deprecated public String group_id;
  @Deprecated public int number_of_accounts;
  /** means that transaction is directly related to the aggregation key */
  @Deprecated public boolean is_primary;
  /** means that need to change key to usa_id from order_header (only if is_primary = true) */
  @Deprecated public boolean is_merge;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderHeaderTender() {}

  /**
   * All-args constructor.
   * @param order_header The new value for order_header
   * @param order_tender The new value for order_tender
   * @param batch_id The new value for batch_id
   * @param group_id The new value for group_id
   * @param number_of_accounts The new value for number_of_accounts
   * @param is_primary means that transaction is directly related to the aggregation key
   * @param is_merge means that need to change key to usa_id from order_header (only if is_primary = true)
   */
  public OrderHeaderTender(OrderHeaderConsolidated order_header, OrderTenderDetailsEvents order_tender, String batch_id, String group_id, Integer number_of_accounts, Boolean is_primary, Boolean is_merge) {
    this.order_header = order_header;
    this.order_tender = order_tender;
    this.batch_id = batch_id;
    this.group_id = group_id;
    this.number_of_accounts = number_of_accounts;
    this.is_primary = is_primary;
    this.is_merge = is_merge;
  }

  public SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return order_header;
    case 1: return order_tender;
    case 2: return batch_id;
    case 3: return group_id;
    case 4: return number_of_accounts;
    case 5: return is_primary;
    case 6: return is_merge;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: order_header = (OrderHeaderConsolidated)value$; break;
    case 1: order_tender = (OrderTenderDetailsEvents)value$; break;
    case 2: batch_id = value$ != null ? value$.toString() : null; break;
    case 3: group_id = value$ != null ? value$.toString() : null; break;
    case 4: number_of_accounts = (Integer)value$; break;
    case 5: is_primary = (Boolean)value$; break;
    case 6: is_merge = (Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'order_header' field.
   * @return The value of the 'order_header' field.
   */
  public OrderHeaderConsolidated getOrderHeader() {
    return order_header;
  }


  /**
   * Sets the value of the 'order_header' field.
   * @param value the value to set.
   */
  public void setOrderHeader(OrderHeaderConsolidated value) {
    this.order_header = value;
  }

  /**
   * Gets the value of the 'order_tender' field.
   * @return The value of the 'order_tender' field.
   */
  public OrderTenderDetailsEvents getOrderTender() {
    return order_tender;
  }


  /**
   * Sets the value of the 'order_tender' field.
   * @param value the value to set.
   */
  public void setOrderTender(OrderTenderDetailsEvents value) {
    this.order_tender = value;
  }

  /**
   * Gets the value of the 'batch_id' field.
   * @return The value of the 'batch_id' field.
   */
  public String getBatchId() {
    return batch_id;
  }


  /**
   * Sets the value of the 'batch_id' field.
   * @param value the value to set.
   */
  public void setBatchId(String value) {
    this.batch_id = value;
  }

  /**
   * Gets the value of the 'group_id' field.
   * @return The value of the 'group_id' field.
   */
  public String getGroupId() {
    return group_id;
  }


  /**
   * Sets the value of the 'group_id' field.
   * @param value the value to set.
   */
  public void setGroupId(String value) {
    this.group_id = value;
  }

  /**
   * Gets the value of the 'number_of_accounts' field.
   * @return The value of the 'number_of_accounts' field.
   */
  public int getNumberOfAccounts() {
    return number_of_accounts;
  }


  /**
   * Sets the value of the 'number_of_accounts' field.
   * @param value the value to set.
   */
  public void setNumberOfAccounts(int value) {
    this.number_of_accounts = value;
  }

  /**
   * Gets the value of the 'is_primary' field.
   * @return means that transaction is directly related to the aggregation key
   */
  public boolean getIsPrimary() {
    return is_primary;
  }


  /**
   * Sets the value of the 'is_primary' field.
   * means that transaction is directly related to the aggregation key
   * @param value the value to set.
   */
  public void setIsPrimary(boolean value) {
    this.is_primary = value;
  }

  /**
   * Gets the value of the 'is_merge' field.
   * @return means that need to change key to usa_id from order_header (only if is_primary = true)
   */
  public boolean getIsMerge() {
    return is_merge;
  }


  /**
   * Sets the value of the 'is_merge' field.
   * means that need to change key to usa_id from order_header (only if is_primary = true)
   * @param value the value to set.
   */
  public void setIsMerge(boolean value) {
    this.is_merge = value;
  }

  /**
   * Creates a new OrderHeaderTender RecordBuilder.
   * @return A new OrderHeaderTender RecordBuilder
   */
  public static OrderHeaderTender.Builder newBuilder() {
    return new OrderHeaderTender.Builder();
  }

  /**
   * Creates a new OrderHeaderTender RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderHeaderTender RecordBuilder
   */
  public static OrderHeaderTender.Builder newBuilder(OrderHeaderTender.Builder other) {
    if (other == null) {
      return new OrderHeaderTender.Builder();
    } else {
      return new OrderHeaderTender.Builder(other);
    }
  }

  /**
   * Creates a new OrderHeaderTender RecordBuilder by copying an existing OrderHeaderTender instance.
   * @param other The existing instance to copy.
   * @return A new OrderHeaderTender RecordBuilder
   */
  public static OrderHeaderTender.Builder newBuilder(OrderHeaderTender other) {
    if (other == null) {
      return new OrderHeaderTender.Builder();
    } else {
      return new OrderHeaderTender.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderHeaderTender instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderHeaderTender>
    implements org.apache.avro.data.RecordBuilder<OrderHeaderTender> {

    private OrderHeaderConsolidated order_header;
    private OrderHeaderConsolidated.Builder order_headerBuilder;
    private OrderTenderDetailsEvents order_tender;
    private OrderTenderDetailsEvents.Builder order_tenderBuilder;
    private String batch_id;
    private String group_id;
    private int number_of_accounts;
    /** means that transaction is directly related to the aggregation key */
    private boolean is_primary;
    /** means that need to change key to usa_id from order_header (only if is_primary = true) */
    private boolean is_merge;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(OrderHeaderTender.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.order_header)) {
        this.order_header = data().deepCopy(fields()[0].schema(), other.order_header);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasOrderHeaderBuilder()) {
        this.order_headerBuilder = OrderHeaderConsolidated.newBuilder(other.getOrderHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.order_tender)) {
        this.order_tender = data().deepCopy(fields()[1].schema(), other.order_tender);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasOrderTenderBuilder()) {
        this.order_tenderBuilder = OrderTenderDetailsEvents.newBuilder(other.getOrderTenderBuilder());
      }
      if (isValidValue(fields()[2], other.batch_id)) {
        this.batch_id = data().deepCopy(fields()[2].schema(), other.batch_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.group_id)) {
        this.group_id = data().deepCopy(fields()[3].schema(), other.group_id);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.number_of_accounts)) {
        this.number_of_accounts = data().deepCopy(fields()[4].schema(), other.number_of_accounts);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.is_primary)) {
        this.is_primary = data().deepCopy(fields()[5].schema(), other.is_primary);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.is_merge)) {
        this.is_merge = data().deepCopy(fields()[6].schema(), other.is_merge);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderHeaderTender instance
     * @param other The existing instance to copy.
     */
    private Builder(OrderHeaderTender other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.order_header)) {
        this.order_header = data().deepCopy(fields()[0].schema(), other.order_header);
        fieldSetFlags()[0] = true;
      }
      this.order_headerBuilder = null;
      if (isValidValue(fields()[1], other.order_tender)) {
        this.order_tender = data().deepCopy(fields()[1].schema(), other.order_tender);
        fieldSetFlags()[1] = true;
      }
      this.order_tenderBuilder = null;
      if (isValidValue(fields()[2], other.batch_id)) {
        this.batch_id = data().deepCopy(fields()[2].schema(), other.batch_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.group_id)) {
        this.group_id = data().deepCopy(fields()[3].schema(), other.group_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.number_of_accounts)) {
        this.number_of_accounts = data().deepCopy(fields()[4].schema(), other.number_of_accounts);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.is_primary)) {
        this.is_primary = data().deepCopy(fields()[5].schema(), other.is_primary);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.is_merge)) {
        this.is_merge = data().deepCopy(fields()[6].schema(), other.is_merge);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'order_header' field.
      * @return The value.
      */
    public OrderHeaderConsolidated getOrderHeader() {
      return order_header;
    }


    /**
      * Sets the value of the 'order_header' field.
      * @param value The value of 'order_header'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setOrderHeader(OrderHeaderConsolidated value) {
      validate(fields()[0], value);
      this.order_headerBuilder = null;
      this.order_header = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'order_header' field has been set.
      * @return True if the 'order_header' field has been set, false otherwise.
      */
    public boolean hasOrderHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'order_header' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public OrderHeaderConsolidated.Builder getOrderHeaderBuilder() {
      if (order_headerBuilder == null) {
        if (hasOrderHeader()) {
          setOrderHeaderBuilder(OrderHeaderConsolidated.newBuilder(order_header));
        } else {
          setOrderHeaderBuilder(OrderHeaderConsolidated.newBuilder());
        }
      }
      return order_headerBuilder;
    }

    /**
     * Sets the Builder instance for the 'order_header' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public OrderHeaderTender.Builder setOrderHeaderBuilder(OrderHeaderConsolidated.Builder value) {
      clearOrderHeader();
      order_headerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'order_header' field has an active Builder instance
     * @return True if the 'order_header' field has an active Builder instance
     */
    public boolean hasOrderHeaderBuilder() {
      return order_headerBuilder != null;
    }

    /**
      * Clears the value of the 'order_header' field.
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearOrderHeader() {
      order_header = null;
      order_headerBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_tender' field.
      * @return The value.
      */
    public OrderTenderDetailsEvents getOrderTender() {
      return order_tender;
    }


    /**
      * Sets the value of the 'order_tender' field.
      * @param value The value of 'order_tender'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setOrderTender(OrderTenderDetailsEvents value) {
      validate(fields()[1], value);
      this.order_tenderBuilder = null;
      this.order_tender = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'order_tender' field has been set.
      * @return True if the 'order_tender' field has been set, false otherwise.
      */
    public boolean hasOrderTender() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'order_tender' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public OrderTenderDetailsEvents.Builder getOrderTenderBuilder() {
      if (order_tenderBuilder == null) {
        if (hasOrderTender()) {
          setOrderTenderBuilder(OrderTenderDetailsEvents.newBuilder(order_tender));
        } else {
          setOrderTenderBuilder(OrderTenderDetailsEvents.newBuilder());
        }
      }
      return order_tenderBuilder;
    }

    /**
     * Sets the Builder instance for the 'order_tender' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public OrderHeaderTender.Builder setOrderTenderBuilder(OrderTenderDetailsEvents.Builder value) {
      clearOrderTender();
      order_tenderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'order_tender' field has an active Builder instance
     * @return True if the 'order_tender' field has an active Builder instance
     */
    public boolean hasOrderTenderBuilder() {
      return order_tenderBuilder != null;
    }

    /**
      * Clears the value of the 'order_tender' field.
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearOrderTender() {
      order_tender = null;
      order_tenderBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'batch_id' field.
      * @return The value.
      */
    public String getBatchId() {
      return batch_id;
    }


    /**
      * Sets the value of the 'batch_id' field.
      * @param value The value of 'batch_id'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setBatchId(String value) {
      validate(fields()[2], value);
      this.batch_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'batch_id' field has been set.
      * @return True if the 'batch_id' field has been set, false otherwise.
      */
    public boolean hasBatchId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'batch_id' field.
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearBatchId() {
      batch_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'group_id' field.
      * @return The value.
      */
    public String getGroupId() {
      return group_id;
    }


    /**
      * Sets the value of the 'group_id' field.
      * @param value The value of 'group_id'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setGroupId(String value) {
      validate(fields()[3], value);
      this.group_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'group_id' field has been set.
      * @return True if the 'group_id' field has been set, false otherwise.
      */
    public boolean hasGroupId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'group_id' field.
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearGroupId() {
      group_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'number_of_accounts' field.
      * @return The value.
      */
    public int getNumberOfAccounts() {
      return number_of_accounts;
    }


    /**
      * Sets the value of the 'number_of_accounts' field.
      * @param value The value of 'number_of_accounts'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setNumberOfAccounts(int value) {
      validate(fields()[4], value);
      this.number_of_accounts = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'number_of_accounts' field has been set.
      * @return True if the 'number_of_accounts' field has been set, false otherwise.
      */
    public boolean hasNumberOfAccounts() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'number_of_accounts' field.
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearNumberOfAccounts() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_primary' field.
      * means that transaction is directly related to the aggregation key
      * @return The value.
      */
    public boolean getIsPrimary() {
      return is_primary;
    }


    /**
      * Sets the value of the 'is_primary' field.
      * means that transaction is directly related to the aggregation key
      * @param value The value of 'is_primary'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setIsPrimary(boolean value) {
      validate(fields()[5], value);
      this.is_primary = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'is_primary' field has been set.
      * means that transaction is directly related to the aggregation key
      * @return True if the 'is_primary' field has been set, false otherwise.
      */
    public boolean hasIsPrimary() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'is_primary' field.
      * means that transaction is directly related to the aggregation key
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearIsPrimary() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_merge' field.
      * means that need to change key to usa_id from order_header (only if is_primary = true)
      * @return The value.
      */
    public boolean getIsMerge() {
      return is_merge;
    }


    /**
      * Sets the value of the 'is_merge' field.
      * means that need to change key to usa_id from order_header (only if is_primary = true)
      * @param value The value of 'is_merge'.
      * @return This builder.
      */
    public OrderHeaderTender.Builder setIsMerge(boolean value) {
      validate(fields()[6], value);
      this.is_merge = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'is_merge' field has been set.
      * means that need to change key to usa_id from order_header (only if is_primary = true)
      * @return True if the 'is_merge' field has been set, false otherwise.
      */
    public boolean hasIsMerge() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'is_merge' field.
      * means that need to change key to usa_id from order_header (only if is_primary = true)
      * @return This builder.
      */
    public OrderHeaderTender.Builder clearIsMerge() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderHeaderTender build() {
      try {
        OrderHeaderTender record = new OrderHeaderTender();
        if (order_headerBuilder != null) {
          try {
            record.order_header = this.order_headerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("order_header"));
            throw e;
          }
        } else {
          record.order_header = fieldSetFlags()[0] ? this.order_header : (OrderHeaderConsolidated) defaultValue(fields()[0]);
        }
        if (order_tenderBuilder != null) {
          try {
            record.order_tender = this.order_tenderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("order_tender"));
            throw e;
          }
        } else {
          record.order_tender = fieldSetFlags()[1] ? this.order_tender : (OrderTenderDetailsEvents) defaultValue(fields()[1]);
        }
        record.batch_id = fieldSetFlags()[2] ? this.batch_id : (String) defaultValue(fields()[2]);
        record.group_id = fieldSetFlags()[3] ? this.group_id : (String) defaultValue(fields()[3]);
        record.number_of_accounts = fieldSetFlags()[4] ? this.number_of_accounts : (Integer) defaultValue(fields()[4]);
        record.is_primary = fieldSetFlags()[5] ? this.is_primary : (Boolean) defaultValue(fields()[5]);
        record.is_merge = fieldSetFlags()[6] ? this.is_merge : (Boolean) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderHeaderTender>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderHeaderTender>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderHeaderTender>
    READER$ = (org.apache.avro.io.DatumReader<OrderHeaderTender>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.order_header == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      this.order_header.customEncode(out);
    }

    if (this.order_tender == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      this.order_tender.customEncode(out);
    }

    if (this.batch_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.batch_id);
    }

    if (this.group_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.group_id);
    }

    out.writeInt(this.number_of_accounts);

    out.writeBoolean(this.is_primary);

    out.writeBoolean(this.is_merge);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.order_header = null;
      } else {
        if (this.order_header == null) {
          this.order_header = new OrderHeaderConsolidated();
        }
        this.order_header.customDecode(in);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.order_tender = null;
      } else {
        if (this.order_tender == null) {
          this.order_tender = new OrderTenderDetailsEvents();
        }
        this.order_tender.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.batch_id = null;
      } else {
        this.batch_id = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.group_id = null;
      } else {
        this.group_id = in.readString();
      }

      this.number_of_accounts = in.readInt();

      this.is_primary = in.readBoolean();

      this.is_merge = in.readBoolean();

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.order_header = null;
          } else {
            if (this.order_header == null) {
              this.order_header = new OrderHeaderConsolidated();
            }
            this.order_header.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.order_tender = null;
          } else {
            if (this.order_tender == null) {
              this.order_tender = new OrderTenderDetailsEvents();
            }
            this.order_tender.customDecode(in);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.batch_id = null;
          } else {
            this.batch_id = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.group_id = null;
          } else {
            this.group_id = in.readString();
          }
          break;

        case 4:
          this.number_of_accounts = in.readInt();
          break;

        case 5:
          this.is_primary = in.readBoolean();
          break;

        case 6:
          this.is_merge = in.readBoolean();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }

  public static void main(String[] args) {
    System.out.println(SCHEMA$);
  }
}










